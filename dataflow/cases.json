{
	"name": "cases",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlCovidMetrics",
						"type": "DatasetReference"
					},
					"name": "AzureSqlCovidMetrics"
				},
				{
					"dataset": {
						"referenceName": "SqlServerCovidMetrics",
						"type": "DatasetReference"
					},
					"name": "SqlServerCovidMetrics"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "parquetOutput"
				}
			],
			"transformations": [
				{
					"name": "selectConfirmedCases"
				},
				{
					"name": "selectConfirmedCases2"
				},
				{
					"name": "leftOuterJoin"
				},
				{
					"name": "selectConfirmedCases3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as integer,",
				"          Updated as date,",
				"          Confirmed as integer,",
				"          Confirmed_Change as integer,",
				"          Deaths as integer,",
				"          Deaths_Change as integer,",
				"          Recovered as integer,",
				"          Recovered_Change as integer,",
				"          Latitude as decimal(10,5),",
				"          Longitude as decimal(10,5),",
				"          ISO2 as string,",
				"          ISO3 as string,",
				"          Country_Region as string,",
				"          load_time as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> AzureSqlCovidMetrics",
				"source(output(",
				"          ID as integer,",
				"          Updated as date,",
				"          Confirmed as integer,",
				"          Confirmed_Change as integer,",
				"          Deaths as integer,",
				"          Deaths_Change as integer,",
				"          Recovered as integer,",
				"          Recovered_Change as integer,",
				"          Latitude as decimal(10,5),",
				"          Longitude as decimal(10,5),",
				"          ISO2 as string,",
				"          ISO3 as string,",
				"          Country_Region as string,",
				"          load_time as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SqlServerCovidMetrics",
				"AzureSqlCovidMetrics select(mapColumn(",
				"          ID,",
				"          Confirmed",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectConfirmedCases",
				"SqlServerCovidMetrics select(mapColumn(",
				"          ID,",
				"          Confirmed",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectConfirmedCases2",
				"selectConfirmedCases, selectConfirmedCases2 join(selectConfirmedCases@ID == selectConfirmedCases@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> leftOuterJoin",
				"leftOuterJoin select(mapColumn(",
				"          ID = selectConfirmedCases@ID,",
				"          Confirmed = selectConfirmedCases@Confirmed,",
				"          ID = selectConfirmedCases@ID,",
				"          Confirmed = selectConfirmedCases@Confirmed",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectConfirmedCases3",
				"selectConfirmedCases3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> parquetOutput"
			]
		}
	}
}