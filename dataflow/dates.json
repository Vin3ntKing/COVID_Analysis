{
	"name": "dates",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlDates",
						"type": "DatasetReference"
					},
					"name": "AzureSqlDates"
				},
				{
					"dataset": {
						"referenceName": "SqlServerDates",
						"type": "DatasetReference"
					},
					"name": "SqlServerDates"
				}
			],
			"sinks": [
				{
					"name": "parquetOutput"
				}
			],
			"transformations": [
				{
					"name": "leftOuterJoin"
				},
				{
					"name": "selectDateInfo"
				}
			],
			"scriptLines": [
				"source(output(",
				"          DateKey as integer,",
				"          FullDate as date,",
				"          isWeekDay as boolean,",
				"          DayOfWeek as integer,",
				"          DayOfMonth as integer,",
				"          DayOfQuarter as integer,",
				"          DayOfYear as integer,",
				"          DayName as string,",
				"          WeekOfYear as integer,",
				"          WeekName as string,",
				"          MonthOfYear as integer,",
				"          MonthName as string,",
				"          CalendarQuarter as integer,",
				"          CalendarQuarterName as string,",
				"          CalendarYear as integer,",
				"          FiscalMonth as integer,",
				"          FiscalMonthName as string,",
				"          FiscalQuarter as integer,",
				"          FiscalQuarterName as string,",
				"          FiscalYear as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> AzureSqlDates",
				"source(output(",
				"          DateKey as integer,",
				"          FullDate as date,",
				"          isWeekDay as boolean,",
				"          DayOfWeek as integer,",
				"          DayOfMonth as integer,",
				"          DayOfQuarter as integer,",
				"          DayOfYear as integer,",
				"          DayName as string,",
				"          WeekOfYear as integer,",
				"          WeekName as string,",
				"          MonthOfYear as integer,",
				"          MonthName as string,",
				"          CalendarQuarter as integer,",
				"          CalendarQuarterName as string,",
				"          CalendarYear as integer,",
				"          FiscalMonth as integer,",
				"          FiscalMonthName as string,",
				"          FiscalQuarter as integer,",
				"          FiscalQuarterName as string,",
				"          FiscalYear as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SqlServerDates",
				"AzureSqlDates, SqlServerDates join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> leftOuterJoin",
				"leftOuterJoin select(mapColumn(",
				"          DateKey = AzureSqlDates@DateKey,",
				"          FullDate = AzureSqlDates@FullDate,",
				"          isWeekDay = AzureSqlDates@isWeekDay,",
				"          DayOfWeek = AzureSqlDates@DayOfWeek,",
				"          DayOfMonth = AzureSqlDates@DayOfMonth,",
				"          DayOfQuarter = AzureSqlDates@DayOfQuarter,",
				"          DayOfYear = AzureSqlDates@DayOfYear,",
				"          DayName = AzureSqlDates@DayName,",
				"          WeekOfYear = AzureSqlDates@WeekOfYear,",
				"          WeekName = AzureSqlDates@WeekName,",
				"          MonthOfYear = AzureSqlDates@MonthOfYear,",
				"          MonthName = AzureSqlDates@MonthName,",
				"          CalendarQuarter = AzureSqlDates@CalendarQuarter,",
				"          CalendarQuarterName = AzureSqlDates@CalendarQuarterName,",
				"          CalendarYear = AzureSqlDates@CalendarYear,",
				"          FiscalMonth = AzureSqlDates@FiscalMonth,",
				"          FiscalMonthName = AzureSqlDates@FiscalMonthName,",
				"          FiscalQuarter = AzureSqlDates@FiscalQuarter,",
				"          FiscalQuarterName = AzureSqlDates@FiscalQuarterName,",
				"          FiscalYear = AzureSqlDates@FiscalYear,",
				"          DateKey = SqlServerDates@DateKey,",
				"          FullDate = SqlServerDates@FullDate,",
				"          isWeekDay = SqlServerDates@isWeekDay,",
				"          DayOfWeek = SqlServerDates@DayOfWeek,",
				"          DayOfMonth = SqlServerDates@DayOfMonth,",
				"          DayOfQuarter = SqlServerDates@DayOfQuarter,",
				"          DayOfYear = SqlServerDates@DayOfYear,",
				"          DayName = SqlServerDates@DayName,",
				"          WeekOfYear = SqlServerDates@WeekOfYear,",
				"          WeekName = SqlServerDates@WeekName,",
				"          MonthOfYear = SqlServerDates@MonthOfYear,",
				"          MonthName = SqlServerDates@MonthName,",
				"          CalendarQuarter = SqlServerDates@CalendarQuarter,",
				"          CalendarQuarterName = SqlServerDates@CalendarQuarterName,",
				"          CalendarYear = SqlServerDates@CalendarYear,",
				"          FiscalMonth = SqlServerDates@FiscalMonth,",
				"          FiscalMonthName = SqlServerDates@FiscalMonthName,",
				"          FiscalQuarter = SqlServerDates@FiscalQuarter,",
				"          FiscalQuarterName = SqlServerDates@FiscalQuarterName,",
				"          FiscalYear = SqlServerDates@FiscalYear",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectDateInfo",
				"selectDateInfo sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> parquetOutput"
			]
		}
	}
}