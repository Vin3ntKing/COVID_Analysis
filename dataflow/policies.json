{
	"name": "policies",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "JsonCountryPolicy",
						"type": "DatasetReference"
					},
					"name": "JsonCountryPolicy"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "PoliciesParquet",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          CountryName as string,",
				"          CountryCode as string,",
				"          RegionName as string,",
				"          RegionCode as string,",
				"          Jurisdiction as string,",
				"          Date as string,",
				"          C1SchoolClosing as integer,",
				"          C1Flag as integer,",
				"          C2WorkplaceClosing as integer,",
				"          C2Flag as integer,",
				"          C3CancelPublicEvents as integer,",
				"          C3Flag as integer,",
				"          C4RestrictionsOnGatherings as integer,",
				"          C4Flag as integer,",
				"          C5ClosePublicTransport as integer,",
				"          C5Flag as integer,",
				"          C6StayAtHomeRequirements as integer,",
				"          C6Flag as integer,",
				"          C7RestrictionsOnInternalMovement as integer,",
				"          C7Flag as integer,",
				"          C8InternationalTravelControls as integer,",
				"          E1IncomeSupport as integer,",
				"          E1Flag as integer,",
				"          E2DebtContractRelief as integer,",
				"          E3FiscalMeasures as integer,",
				"          E4InternationalSupport as integer,",
				"          H1PublicInformationCampaigns as integer,",
				"          H1Flag as integer,",
				"          H2TestingPolicy as integer,",
				"          H3ContactTracing as integer,",
				"          H4EmergencyInvestmentInHealthcare as integer,",
				"          H5InvestmentInVaccines as integer,",
				"          H6FacialCoverings as integer,",
				"          H6Flag as integer,",
				"          H7VaccinationPolicy as integer,",
				"          H7Flag as integer,",
				"          H8ProtectionOfElderlyPeople as integer,",
				"          H8Flag as integer,",
				"          M1Wildcard as integer,",
				"          StringencyIndex as integer,",
				"          StringencyIndexForDisplay as integer,",
				"          StringencyLegacyIndex as integer,",
				"          StringencyLegacyIndexForDisplay as integer,",
				"          GovernmentResponseIndex as integer,",
				"          GovernmentResponseIndexForDisplay as integer,",
				"          ContainmentHealthIndex as integer,",
				"          ContainmentHealthIndexForDisplay as integer,",
				"          EconomicSupportIndex as integer,",
				"          EconomicSupportIndexForDisplay as integer,",
				"          id as string,",
				"          rid as string,",
				"          self as string,",
				"          etag as string,",
				"          attachments as string,",
				"          ts as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> JsonCountryPolicy",
				"JsonCountryPolicy sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as integer,",
				"          Updated as date,",
				"          Recovered as integer,",
				"          Recovered_Change as integer,",
				"          Country_Region as string,",
				"          load_time as timestamp",
				"     ),",
				"     format: 'parquet',",
				"     partitionFileNames:['policies.parquet'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}